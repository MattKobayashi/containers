---
name: Build and test `irrd` container image

on:
  pull_request:
    branches:
      - main
    paths:
      - 'irrd/**'
  workflow_dispatch:

jobs:
  create-runners:
    name: Create self-hosted runner
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        container: [irrd]
    steps:
      - name: Create self-hosted runner
        uses: MattKobayashi/tailscale-qemu-runner-action@v1.1.0
        with:
          gh-api-token: ${{ secrets.GH_API_TOKEN }}
          gha-runner-apt-mirror: http://au.archive.ubuntu.com/ubuntu/
          gha-runner-tz: Australia/Brisbane
          ssh-host: 100.102.37.118
          ssh-user: matthew
          ts-oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          ts-oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          ts-tag: ci
  build-setup:
    name: Set up build environment
    runs-on: ubuntu-latest
    outputs:
      repo-owner: ${{ steps.repo-lowercase.outputs.REPO_OWNER }}
    steps:
      - name: Convert repository owner name to lowercase
        id: repo-lowercase
        run: |
          echo "REPO_OWNER=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT
  build-test:
    name: Build and test image
    runs-on: self-hosted
    needs: [build-setup]
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        container: [irrd]
    steps:
      # Checkout repository
      # https://github.com/actions/checkout
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      # Set up QEMU
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0
      # Set up Docker Buildx
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1
      # Build and export image to Docker daemon
      # https://github.com/docker/build-push-action
      - name: Build and export to Docker
        id: build-export
        uses: docker/build-push-action@v6.9.0
        with:
          context: ${{ github.workspace }}/${{ matrix.container }}
          load: true
          tags: "${{ needs.build-setup.outputs.repo-owner }}/${{ matrix.container }}:test"
      # Install uuid-runtime package
      - name: Install `uuid-runtime`
        run: |
          set -x
          apt-get --yes install uuid-runtime
      # Test the built image
      - name: Test image
        run: |
          set -x
          CONTAINER_ID="$(uuidgen)"
          docker container run --attach=stdout --attach=stderr --name=$CONTAINER_ID --rm ${{ needs.build-setup.outputs.repo-owner }}/${{ matrix.container }}:test &
          sleep 60
          docker container stop $CONTAINER_ID
      # Remove the test image
      - name: Remove test image
        if: ${{ !cancelled() }}
        run: |
          set -x
          docker image rm --force ${{ steps.build-export.outputs.imageid }}
