---
name: Publish images to GHCR.io

on:
  schedule:
    - cron: '0 3 * * SAT'
  push:
    branches: [main]
    # Publish semver tags as releases.
    tags: ['v*.*.*']
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  create-runners:
    name: 'Create self-hosted Actions runners'
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        runner-name: [
          actions-runner,
          avahi,
          certbot-cloudflare,
          fullbogons,
          growatt-ev,
          iperf2,
          iperf3,
          irrd,
          mdns-reflector,
          rng-tools,
          speedtest,
          stun,
          telegraf,
          verlihub,
          vyos-release-alert,
          xteve,
          yancobat
        ]
    uses: ./.github/workflows/create-runner.yaml
    with:
      runner-name: ${{ matrix.runner-name }}
      workdir: /tmp/actions-runners/${{ matrix.runner-name }}
  build-setup:
    name: 'Set up build environment'
    runs-on: ubuntu-latest
    outputs:
      repo-owner: ${{ steps.repo-lowercase.outputs.REPO_OWNER }}
    steps:
      - name: Convert repository owner name to lowercase
        id: repo-lowercase
        run: |
          echo "REPO_OWNER=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT
  build-and-push:
    name: 'Build and push'
    runs-on: self-hosted
    needs: [create-runners, build-setup]
    strategy:
      fail-fast: false
      matrix:
        container: [
          actions-runner,
          avahi,
          certbot-cloudflare,
          fullbogons,
          growatt-ev,
          iperf2,
          iperf3,
          irrd,
          mdns-reflector,
          rng-tools,
          speedtest,
          stun,
          telegraf,
          verlihub,
          vyos-release-alert,
          xteve,
          yancobat
        ]
    steps:
      # Checkout repository
      # https://github.com/actions/checkout
      - name: Checkout repository
        uses: actions/checkout@v4.1.7
        if: ${{ github.ref_name == 'main' || github.head_ref == matrix.container || github.ref_type == 'tag' }}
      # Set up QEMU
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0
        if: ${{ github.ref_name == 'main' || github.head_ref == matrix.container || github.ref_type == 'tag' }}
      # Set up Docker Buildx
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1
        if: ${{ github.ref_name == 'main' || github.head_ref == matrix.container || github.ref_type == 'tag' }}
        with:
          buildkitd-config-inline: |
            [registry."docker.io"]
              mirrors = ["registry-mirror:5000"]
            [registry."registry-mirror:5000"]
              http = true
          driver-opts: |
            network=mattflix
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: |
          (github.event_name == 'push' ||
          github.event_name == 'schedule' ||
          github.event_name == 'workflow_dispatch') &&
          github.ref_name == 'main' ||
          github.head_ref == matrix.container ||
          github.ref_type == 'tag'
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        if: ${{ github.ref_name == 'main' || github.head_ref == matrix.container || github.ref_type == 'tag' }}
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ needs.build-setup.outputs.repo-owner }}/${{ matrix.container }}
            # Build and export image to Docker daemon
      # https://github.com/docker/build-push-action
      - name: Build and export to Docker
        uses: docker/build-push-action@v6.7.0
        if: ${{ github.event_name == 'pull_request' }}
        with:
          context: ./${{ matrix.container }}
          load: true
          tags: "${{ needs.build-setup.outputs.repo-owner }}/${{ matrix.container }}:test"
          cache-from: type=gha
          cache-to: type=gha,mode=max
      # Test the built image
      - name: Test image
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          set -ex
          CONTAINER_ID=$(docker container run --detach --rm ${{ needs.build-setup.outputs.repo-owner }}/${{ matrix.container }}:test)
          sleep 30
          docker container stop $CONTAINER_ID
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v6.7.0
        if: ${{ github.ref_name == 'main' || github.head_ref == matrix.container || github.ref_type == 'tag' }}
        with:
          context: ./${{ matrix.container }}
          push: ${{ github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
